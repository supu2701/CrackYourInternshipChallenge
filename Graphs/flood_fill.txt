class Solution {
public:
    
    void dfs(vector<vector<int>> &image, int n, int m, int i, int j, int start, int newColor){
        if(i<0 || i>=n || j<0 || j>=m || image[i][j]!=start) return;
        
        image[i][j]=newColor;
        
        dfs(image,n,m,i+1,j,start,newColor);
        dfs(image,n,m,i-1,j,start,newColor);
        dfs(image,n,m,i,j+1,start,newColor);
        dfs(image,n,m,i,j-1,start,newColor);
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int n=  image.size();
        int m= image[0].size();
        int start= image[sr][sc];
        
        //base case
        if(start==newColor) return image;
        
        dfs(image, n,m,sr,sc,start,newColor);
        return image;
        
        
        
    }
};