class Solution {
public:
    vector<int> restoreArray(vector<vector<int>>& adjacentPairs) {
        //making adjacency list
        unordered_map<int,vector<int>> graph;
        for(int i=0;i<adjacentPairs.size();i++){
            graph[adjacentPairs[i][0]].push_back(adjacentPairs[i][1]);
            graph[adjacentPairs[i][1]].push_back(adjacentPairs[i][0]);
        }
        
        int start=0;
        for(auto &[k,v]:graph){
            if(v.size()==1){
                start= k;
                break;
            }
        }
        
        vector<int> res(graph.size());
        res[0]=start;
        res[1]=graph[start][0];
        for(int i=2;i<graph.size();i++){
            for(int j=0;j<graph[res[i-1]].size();j++){
                start= graph[res[i-1]][j];
                if(start!=res[i-2]) break;
            }
            
            res[i]=start;
        }
        
        return res;
        
        
        
    }
};